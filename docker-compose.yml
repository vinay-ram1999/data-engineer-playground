version: "3.9"

services:
  # Postgres DB for nessie backend
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_DB:   nessie
      POSTGRES_USER: nessie
      POSTGRES_PASSWORD: nessie
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "nessie"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - lakehouse-network

  # Nessie Catalog Server Using Postgres DB
  nessie:
    image: ghcr.io/projectnessie/nessie:0.83.1
    container_name: nessie
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "19120:19120"
    environment:
      - QUARKUS_PROFILE=prod
      - QUARKUS_HTTP_PORT=19120
      - NESSIE_VERSION_STORE_TYPE=JDBC
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/nessie
      - QUARKUS_DATASOURCE_USERNAME=nessie
      - QUARKUS_DATASOURCE_PASSWORD=nessie
      - QUARKUS_LOG_LEVEL=INFO
    networks:
      - lakehouse-network
  
  # Minio Storage Server
  minio:
    image: minio/minio@sha256:8834ae47a2de3509b83e0e70da9369c24bbbc22de42f2a2eddc530eee88acd1b
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - ./data:/data
    entrypoint: >
      /bin/sh -c "
      minio server /data --console-address ':9001' &
      sleep 5;
      mc alias set myminio http://localhost:9000 minioadmin minioadmin;
      mc mb myminio/lakehouse;
      mc mb myminio/seed;
      mc cp /data/* myminio/seed/;
      tail -f /dev/null"
    networks:
      - lakehouse-network
  
  # Spark
  spark:
    platform: linux/x86_64
    image: alexmerced/spark35nb@sha256:a097787b7cda538b668e320d660c24bec7e6a9691a8b0b971b26c96c6661091f
    env_file:
      - .env
    ports: 
      - 8080:8080    # Master Web UI
      - 7077:7077    # Master Port for job submissions
      - 8081:8081    # Worker Web UI
      - 4040-4045:4040-4045  # Additional Spark job UI ports for more jobs
      - 18080:18080  # Spark History Server
      - 8888:8888    # Jupyter Notebook
    environment:
      - SPARK_MASTER_HOST=spark
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_WORKER_WEBUI_PORT=8081
      - SPARK_HISTORY_OPTS=-Dspark.history.fs.logDirectory=/tmp/spark-events
      - SPARK_HOME=/opt/spark
    volumes:
      - ./spark:/workspace/seed
    container_name: spark
    entrypoint: >
      /bin/bash -c "
      /opt/spark/sbin/start-master.sh && \
      /opt/spark/sbin/start-worker.sh spark://localhost:7077 && \
      mkdir -p /tmp/spark-events && \
      start-history-server.sh && \
      jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password='' && \
      tail -f /dev/null
      "
    networks:
      - lakehouse-network

networks:
  lakehouse-network:
    driver: bridge

volumes:
  pgdata: